version: "1.0.0"

services:
  web:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./nginx:/etc/nginx/conf.d
    depends_on:
      - backend
      - frontend
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "2"
          memory: 1GB
      restart_policy:
        condition: on-failure
    networks:
      - ponto

  frontend:
    build:
      context: ./frontend
      dockerfile: frontend/Dockerfile.prod
    ports:
      - "3000:3000"
    volumes:
      - frontend:/app
    environment:
      - NODE_ENV=production
    depends_on:
      - backend
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: "0.5"
          memory: 1GB
      restart_policy:
        condition: on-failure
    networks:
      - ponto

  backend:
    build:
      context: ./backend
      dockerfile: backend/Dockerfile.prod
    ports:
      - "8000:8000"
    volumes:
      - backend:/app
      - ./db/scripts:/app/db/scripts
      - ./db/config:/app/db/config
    environment:
      - NODE_ENV=production
      - DB_CONFIG_PATH=/app/db/config/config.json
    depends_on:
      - db
      - redis
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: "0.5"
          memory: 1GB
      restart_policy:
        condition: on-failure
    networks:
      - ponto

  db:
    image: postgres:alpine
    environment:
      POSTGRES_DB: ponto
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres2416
    ports:
      - "5432:5432"
    volumes:
      - db:/var/lib/postgresql/data
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "1"
          memory: 1.5GB
      restart_policy:
        condition: on-failure
    networks:
      - ponto

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis:/data
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "1"
          memory: 1GB
      restart_policy:
        condition: on-failure
    networks:
      - ponto

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@sergipetec.org.br
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    volumes:
      - pgadmin:/var/lib/pgadmin
    depends_on:
      - db
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.5"
          memory: 0.5GB
      restart_policy:
        condition: on-failure
    networks:
      - ponto

networks:
  ponto:
    driver: bridge

volumes:
  db:
  redis:
  pgadmin:
  frontend:
  backend:
