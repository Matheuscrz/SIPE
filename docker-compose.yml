version: "3.8"

services:
  web:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/mime.types:/etc/nginx/mime.types
    depends_on:
      - api
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "2"
          memory: 1GB
      restart_policy:
        condition: on-failure
    networks:
      - ponto

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - backend:/app
      - ./db/scripts:/app/db/scripts
      - ./db/config:/app/db/config
    environment:
      - NODE_ENV=production
      - DB_CONFIG_PATH=/app/db/config/config.json
      - DB_HOST=localhost
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres2416
      - DB_DATABASE=ponto
      - JWT_SECRET_KEY_REFRESH=667407774cc33f93ff969b963481e6d8f8e7dafdb49f851e369d64ccdf7ea4772de398f857cfac5237a6dde5127de954f3e4a629753642b31547d17a0d9acb55
    depends_on:
      - db
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: "0.5"
          memory: 1GB
      restart_policy:
        condition: on-failure
    networks:
      - ponto

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - frontend:/app
    depends_on:
      - api
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.5"
          memory: 1GB
      restart_policy:
        condition: on-failure
    networks:
      - ponto

  db:
    build:
      context: ./db/config
      dockerfile: Dockerfile
    environment:
      POSTGRES_DB: ponto
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres2416
      POSTGRES_SYNCHRONOUS_COMMIT: "on"
      POSTGRES_FSYNC: "on"
      POSTGRES_WAL_LEVEL: "replica"
      POSTGRES_MAX_WAL_SENDERS: 3
      POSTGRES_WAL_KEEP_SEGMENTS: 8
      POSTGRES_MAX_REPLICATION_SLOTS: 3
      POSTGRES_MAX_CONNECTIONS: 100
      POSTGRES_SHARED_BUFFERS: 256MB
      POSTGRES_EFFECTIVE_CACHE_SIZE: 512MB
      POSTGRES_WORK_MEM: 32MB
      POSTGRES_MAINTENANCE_WORK_MEM: 64MB
      POSTGRES_CHECKPOINT_TIMEOUT: 5min
      POSTGRES_CHECKPOINT_COMPLETION_TARGET: 0.9
      POSTGRES_LOG_MIN_DURATION_STATEMENT: 500ms
      POSTGRES_LOG_MIN_DURATION_SAMPLE: 500ms
      POSTGRES_LOG_CHECKPOINTS: on
      POSTGRES_LOG_CONNECTIONS: on
      POSTGRES_LOG_DISCONNECTIONS: on
      POSTGRES_LOG_DURATION: on
      POSTGRES_LOG_ERROR_VERBOSITY: default
      POSTGRES_LOG_LOCK_WAITS: on
      POSTGRES_LOG_STATEMENT: ddl
      POSTGRES_LOG_TIMEZONE: "America/Maceio"
      POSTGRES_LOG_LINE_PREFIX: "%t [%p]: [%l-1] "
      POSTGRES_LOG_STATEMENT_SAMPLE_RATE: 1.0
      POSTGRES_LOG_TRUNCATE_ON_ROTATION: on
      POSTGRES_LOG_ROTATION_AGE: 1d
      POSTGRES_LOG_ROTATION_SIZE: 10MB
      POSTGRES_LOG_FILE_MODE: 0600
      POSTGRES_LOG_DIRECTORY: /var/log/postgresql
      POSTGRES_LOG_FILENAME: postgresql-%Y-%m-%d_%H%M%S.log
    ports:
      - "5432:5432"
    volumes:
      - ./data:/var/lib/postgresql/data
      - ./logs:/var/log/postgresql
      - ./backup:/backup
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "1"
          memory: 1.5GB
      restart_policy:
        condition: on-failure
    networks:
      - ponto

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@sergipetec.org.br
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    volumes:
      - pgadmin:/var/lib/pgadmin
    depends_on:
      - db
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.5"
          memory: 0.5GB
      restart_policy:
        condition: on-failure
    networks:
      - ponto

networks:
  ponto:
    driver: bridge

volumes:
  db:
    external: true # Se o volume já existir, ele não será recriado
  pgadmin:
  backend:
  frontend:
